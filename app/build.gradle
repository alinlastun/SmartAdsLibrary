apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    flavorDimensions "default"
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.junky2.smartadslib"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        key_keyboard {
            Properties props = new Properties()
            props.load(new FileInputStream(file("../keystore/key_keyboard.properties")))
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }

        key_creative {
            Properties props = new Properties()
            props.load(new FileInputStream(file("../keystore/key_creative.properties")))
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }

        key_bkt {
            Properties props = new Properties()
            props.load(new FileInputStream(file("../keystore/key_bkt.properties")))
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }

        key_tm {
            Properties props = new Properties()
            props.load(new FileInputStream(file("../keystore/key_tm.properties")))
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }

        key_themekey {
            Properties props = new Properties()
            props.load(new FileInputStream(file("../keystore/key_themekey.properties")))
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }
    }
    productFlavors {



        keyboard_arabic {
            dimension "default"
            applicationId "com.keyboard.plus.arabic"
            versionCode rootProject.ext.themeVersionCode
            versionName rootProject.ext.themeVersionName
            signingConfig signingConfigs.key_tm
        }
    }
    }

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-ads:17.1.1'
    implementation 'com.facebook.android:audience-network-sdk:4.99.3'

    implementation project(':adslib')
}
